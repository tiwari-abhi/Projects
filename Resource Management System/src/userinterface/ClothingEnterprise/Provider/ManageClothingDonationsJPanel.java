/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ClothingEnterprise.Provider;

import Business.EcoSystem;
import Business.Enterprise.ClothingEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.ClothingInventoryOrg;
import Business.Organization.ClothingProviderOrg;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Providers.Provider;
import Business.Resources.ClothingResource;
import Business.UserAccount.UserAccount;
import Business.Resources.Resource;
import Business.TaxBenefitClasses.ClothesTaxBenefit;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinay Limbare
 */
public class ManageClothingDonationsJPanel extends javax.swing.JPanel {

    /**
     * 
     * 
     * Creates new form ManageVaccinesJPanel
     */private JPanel userProcessContainer;
    private OrganizationDirectory organizationDir;
    private EcoSystem system;
    private ClothingEnterprise enterprise;
    private ClothingProviderOrg organization;
    private int totalClothesCount = 0;
    private UserAccount account;
    private Provider provider;
    private ArrayList<Resource> tempList;
    private int quantity;

    
    public ManageClothingDonationsJPanel(JPanel userProcessContainer, UserAccount account, 
            Organization organization, Enterprise enterprise, EcoSystem business, Provider provider) {
        
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir= enterprise.getOrganizationDirectory();
        this.system = business;
        this.enterprise = (ClothingEnterprise) enterprise;
        this.account = account;
        this.organization = (ClothingProviderOrg) organization;
        this.provider = provider;
        populateResourceJTable();
        tempList = new ArrayList<>();
        
        popPledgeTable();
        lblmfgName.setText(account.getEmployee().getName());
        
        backJButton.setEnabled(false);
    }
    
    public void popPledgeTable(){
        DefaultTableModel model = (DefaultTableModel) pledgedResourceJTable.getModel();
        model.setRowCount(0);
        
        int totalCost=0;
            
            for (Resource r : tempList){
                Object[] row = new Object[2];
                row[0] = r;
                row[1] = r.getTotalDonatedToSystem();
                model.addRow(row);
                totalCost += r.getUnitPrice() * r.getTotalDonatedToSystem();
            }
        lblTaxBenefit.setText(String.valueOf(totalCost * system.getCtb().getClothesTaxBenefitPercentage()));
    }
    


        public void populateResourceJTable() {
        DefaultTableModel model = (DefaultTableModel) resourceSalesDirectoryJTable.getModel();
        
        int totalClothes=0;        
        model.setRowCount(0);
                   
        for (Resource r : provider.getResourceDirectory().getResourceList()){

                Object[] row = new Object[5];
                row[0] = r;
                row[1] = r.getTotalManufacturedUnits();
                row[2] = r.getTotalSoldUnits();
                row[3] = r.getTotalExcessUnits();
                row[4] = r.getUnitPrice() * r.getTotalManufacturedUnits();
                model.addRow(row);

                totalClothes += r.getTotalExcessUnits();
                
        }
        totalClothesCount = totalClothes;
    }      
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        lblmfgName = new javax.swing.JLabel();
        lblTaxBenefit = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        resourceSalesDirectoryJTable = new javax.swing.JTable();
        btnPledge = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        spinnerQuantity = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        pledgedResourceJTable = new javax.swing.JTable();
        modifyQuantityJButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtModifyQty = new javax.swing.JTextField();
        btnSendDonation = new javax.swing.JButton();

        setBackground(new java.awt.Color(250, 229, 150));

        backJButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        lblmfgName.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        lblmfgName.setText("<Book Provider Name>");

        lblTaxBenefit.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        lblTaxBenefit.setText("<Value>");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel4.setText("Expected Tax Benefit :");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        jLabel5.setText("Manage Book Donations");

        resourceSalesDirectoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Resource Name", "Total Units Produced", "Total Units Sold", "Total Excess Units", "Total Mfg. Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(resourceSalesDirectoryJTable);

        btnPledge.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        btnPledge.setText("Pledge");
        btnPledge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPledgeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel7.setText("Quantity:");

        spinnerQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        pledgedResourceJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Resource Name", "Units Pledged"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(pledgedResourceJTable);

        modifyQuantityJButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        modifyQuantityJButton.setText("OK");
        modifyQuantityJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyQuantityJButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel8.setText("Modify Quantity:");

        btnSendDonation.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        btnSendDonation.setText("Send Donation");
        btnSendDonation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendDonationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(10, 10, 10)
                                .addComponent(txtModifyQty, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(modifyQuantityJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(btnSendDonation))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(lblmfgName)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPledge))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(6, 6, 6)
                                    .addComponent(lblTaxBenefit))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(lblmfgName)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(lblTaxBenefit))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPledge, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtModifyQty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(modifyQuantityJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSendDonation, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ClothingProviderWorkAreaJPanel cpwajp = (ClothingProviderWorkAreaJPanel) component;
        cpwajp.populateDonatedResourceTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnPledgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPledgeActionPerformed
        // TODO add your handling code here:
        int fetchqty = (Integer)(spinnerQuantity.getValue());
        int selectedRow = resourceSalesDirectoryJTable.getSelectedRow();
        quantity = fetchqty;
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }       
        
        if (fetchqty <= 0){
                JOptionPane.showMessageDialog(null,"Quantity cannot be less than 0");
                return;
        }

        if (fetchqty > totalClothesCount){
                JOptionPane.showMessageDialog(null,"Not enough excess resources to donate");
                return;
        }
        
//        BookResource resource = new BookResource();
        
        totalClothesCount = totalClothesCount - fetchqty;

        Resource selectedResource = (Resource) resourceSalesDirectoryJTable.getValueAt(selectedRow,0);
        
//        
//        resource.setResourceType(selectedResource.getResourceType());
//        resource.setSalesRecord(selectedResource.getSalesRecord());
//        resource.setTotalDonatedToNGO(selectedResource.getTotalDonatedToNGO());
//        resource.setTotalDonatedToSystem(selectedResource.getTotalDonatedToSystem());
//        resource.setTotalExcessUnits(selectedResource.getTotalExcessUnits());
//        resource.setTotalManufacturedUnits(selectedResource.getTotalManufacturedUnits());
//        resource.setTotalSoldUnits(selectedResource.getTotalSoldUnits());
//        resource.setUnitPrice(selectedResource.getUnitPrice());
        
        if(fetchqty <= selectedResource.getTotalExcessUnits()){
                            
            boolean isAlreadyPresent = false;

            for (Resource r : tempList){//Update Quantity in the list
                
                if (r == selectedResource){
                    
                    int oldqty = r.getTotalExcessUnits();
                    int newqty = oldqty - fetchqty;
                    
                    if(newqty != 0){
                        JOptionPane.showMessageDialog(null,"Some excess resources are still remaining","Warning",JOptionPane.WARNING_MESSAGE);
                    }
                    
                    r.setTotalExcessUnits(newqty);
                    r.setTempDonatedToSystem(fetchqty + r.getTempDonatedToSystem());
                    r.setTotalDonatedToSystem(fetchqty + r.getTotalDonatedToSystem()); 
                    isAlreadyPresent = true;
                    populateResourceJTable();
                    popPledgeTable();
                    //break;
                }
            }

            if (!isAlreadyPresent){//Not present in list so add resource
                int oldqty = selectedResource.getTotalExcessUnits();
                int newqty = oldqty - fetchqty;
                
                if(newqty != 0){
                    JOptionPane.showMessageDialog(null,"Some excess resources are still remaining","Warning",JOptionPane.WARNING_MESSAGE);
                }
                
                selectedResource.setTotalExcessUnits(newqty);
                
                selectedResource.setTotalDonatedToSystem(fetchqty + selectedResource.getTotalDonatedToSystem());
                selectedResource.setTempDonatedToSystem(fetchqty + selectedResource.getTempDonatedToSystem());
                tempList.add(selectedResource);
                populateResourceJTable();
                popPledgeTable();
            }       

        }
        else{
            JOptionPane.showMessageDialog(null, "Quantity > Availibility","Warning",JOptionPane.WARNING_MESSAGE);
        }   
        
    }//GEN-LAST:event_btnPledgeActionPerformed

    private void modifyQuantityJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyQuantityJButtonActionPerformed
        // TODO add your handling code here:
       int selectedRow = pledgedResourceJTable.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please Select a row");
            return;
        }
        
        Resource resource = (Resource) pledgedResourceJTable.getValueAt(selectedRow,0);
        int currentAvailableQty = resource.getTotalExcessUnits();
        int oldQty = resource.getTempDonatedToSystem()/*getTotalDonatedToSystem*/;
        int getNewQty = Integer.parseInt(txtModifyQty.getText());
        
        if(getNewQty>(currentAvailableQty+oldQty)){
            JOptionPane.showMessageDialog(null, "Quantity is more than availibility");
            return;
        }
        else{
            if(getNewQty<=0){
                JOptionPane.showMessageDialog(null, "Quantity should more than 0");
                return;
            }
            else{
                resource.setTempDonatedToSystem(getNewQty);
                resource.setTotalDonatedToSystem(getNewQty);
                resource.setTotalExcessUnits(currentAvailableQty+(oldQty-getNewQty));
                
                for (Resource r :provider.getResourceDirectory().getResourceList()){
                    if (r.equals(resource)){
                        r.setTotalExcessUnits(currentAvailableQty+(oldQty-getNewQty));
                        break;
                    }
                }
                
                populateResourceJTable();
                popPledgeTable();
            }
        }
        
    }//GEN-LAST:event_modifyQuantityJButtonActionPerformed

    private void btnSendDonationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendDonationActionPerformed
        // TODO add your handling code here:
        if (!tempList.isEmpty()){
            
            ClothingInventoryOrg org =null;
            
            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
                if (o instanceof ClothingInventoryOrg){
                    org = (ClothingInventoryOrg) o;
                }
            }
            
            if (org != null){
                for (Resource r : tempList){
                    
                    boolean alreadyPresent=false;
                    
                    for(Resource res : org.getClothingResourceDirectory().getResourceList()){
                        if (r.equals(res)){
                            alreadyPresent=true;
                            int ol = res.getTotalDonatedToSystem();
                            int nw = r.getTotalDonatedToSystem();
                            res.setTotalDonatedToSystem(ol + nw);
                            res.setTempDonatedToSystem(ol + nw);
                            
                            for (Resource reso : provider.getDonatedResources().getResourceList()){
                                if (r.equals(reso)){
                                    reso.setTotalDonatedToSystem(ol + nw);
                                    reso.setTempDonatedToSystem(ol + nw);
                                    break;
                                }
                            }
                            
                            break;
                        }
                    }
                    if (!alreadyPresent){
                        org.getClothingResourceDirectory().addResourceToList(r);
                        provider.getDonatedResources().addResourceToList(r);
                    }
                }
                tempList.clear();
            }
            
            popPledgeTable();
            
            JOptionPane.showMessageDialog(null,"Clothes Sent to Clothing Inventory");
            backJButton.setEnabled(true);
            
        }else{
            JOptionPane.showMessageDialog(null,"Please pledge resources to continue!");
        }
        
    }//GEN-LAST:event_btnSendDonationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnPledge;
    private javax.swing.JButton btnSendDonation;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblTaxBenefit;
    private javax.swing.JLabel lblmfgName;
    private javax.swing.JButton modifyQuantityJButton;
    private javax.swing.JTable pledgedResourceJTable;
    private javax.swing.JTable resourceSalesDirectoryJTable;
    private javax.swing.JSpinner spinnerQuantity;
    private javax.swing.JTextField txtModifyQty;
    // End of variables declaration//GEN-END:variables
}